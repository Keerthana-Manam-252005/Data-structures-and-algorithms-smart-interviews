Non Divisible Subsets:

You are given an array of integers of size N and another integer K. Find the size of the largest subset of the array in which the sum of any two numbers is not perfectly divisible by K.

Input Format
The first line of input contains T - the number of test cases. It's followed by 2T lines, the first line contains N - the size of the array and K, separated by a space. The second line contains the elements of the array.

Output Format
For each test case, print the size of the largest subset in which the sum of any two numbers is not perfectly divisible by K, separated by a newline.

Constraints
10 points
1 <= T <= 100
1 <= N <= 10
1 <= K <= 50
0 <= arr[i] <= 102

20 points
1 <= T <= 100
1 <= N <= 102
1 <= K <= 102
0 <= arr[i] <= 105

70 points
1 <= T <= 100
1 <= N <= 104
1 <= K <= 105
0 <= arr[i] <= 105

Example
Input
2
4 3
1 7 2 4Â 
5 2 
1 2 3 4 5

Output
3
2

Explanation

Test Case 1:
The subset {1, 7, 4} is the largest subset with the sum of any two numbers { {1,7}=8, {1,4}=5, {7,4}=11 } not perfectly divisible by K=3.

Test Case 2:
The subset {1, 2} or {2, 3} or {3, 4} or {4, 5} can be the largest subset with the sum of any two numbers not perfectly divisible by K=2.

code:
def nonDivisibleSubsets(a,k):
    s=[0 for _ in range(k)]
    for i in a:
        s[i%k]+=1
    ans=min(1,s[0])
    s=s[1:]
    for i in range(len(s)//2):
        ans+=max(s[i],s[-(i+1)])
    if len(s)%2==1:
        ans+=min(1,s[len(s)//2])
    return ans
t=int(input())
for _ in range(t):
    n,k=map(int,input().split())
    a=list(map(int,input().split()))
    print(nonDivisibleSubsets(a,k))
