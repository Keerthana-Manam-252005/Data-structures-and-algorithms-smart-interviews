Jobs and Machines:

You have to complete N jobs using 2 machines. You can only work on 1 job at a time and the jobs should be completed in the order given in the input. The time to complete a particular job is differ	g time of K involved between the machines. Find the minimum time required to complete all the jobs.

Input Format
The first line of input contains T - number of test cases. First line of each testcase contains 2 integers N and K, it is followed by 2 lines, each containing N integers where ith number in each line denotes the time taken by the Machine-1 and Machine-2 to complete the ith job respectively.

Output Format
For each test case, print the minimum time to complete all the jobs, separated by a newline.

Constraints
1 <= T <= 103
1 <= N, K <= 103
1 <= A[i], B[i] <= 105

Example
Input
2
5 8
11 34 50 29 17
36 48 27 13 18
5 2
18 23 44 37 36
46 29 42 45 8

Output
111
132

Explanation

Example 1:
Jobs will be executed in the following order: Machine-1, Machine-1, Machine-2, Machine-2, Machine-2.
Total Cost = 11 + 34 + 8 + 27 + 13 + 18 = 111.

Example 2:
Jobs will be executed in the following order: Machine-1, Machine-1, Machine-1, Machine-1, Machine-2.
Total Cost = 18 + 23 + 44 + 37 + 2 + 8 = 132.


code:
def jobs_machines(N,K,A,B):
    dpA = [0]*(N+1)
    dpB = [0]*(N+1)
    dpA[0] = A[0]
    dpB[0] = B[0]
    for  i in range(N):
        dpA[i] = min(dpB[i-1]+K,dpA[i-1]) + A[i]
        dpB[i] = min(dpA[i-1]+K,dpB[i-1]) + B[i]
    return min(dpA[N-1],dpB[N-1])
t = int(input())
for _ in range(t):
    N,K = map(int,input().split())
    A = list(map(int,input().split()))
    B = list(map(int,input().split()))
    print(jobs_machines(N,K,A,B))
